#lang planet neil/sicp
(define (random-in-range low high)
  (let ((range (- high low)))
    (+ low (random range))))
(define (square x) (* x x))
(define (monte-carlo trials experiment)
  (define (iter trials-remaining trials-passed)
    (cond ((= trials-remaining 0)
           (/ trials-passed trials))
          ((experiment)
           (iter (- trials-remaining 1) (+ trials-passed 1)))
          (else
           (iter (- trials-remaining 1) trials-passed))))
  (iter trials 0))

(define (estimate-integral x1 x2 y1 y2 trials)
  (define (experiment)
    (let ((x (/ (+ x1 x2) 2))
          (y (/ (+ y1 y2) 2))
          (r (/ (abs (- x1 x2)) 2)))
      (< (+ (square (- (random-in-range x1 x2) x))
            (square (- (random-in-range y1 y2) y)))
         (square r))))
  (monte-carlo trials experiment))
(define (estimate-pi trials)
  (* 4 (estimate-integral 2 208 4 210 trials)))

(exact->inexact (estimate-pi 100000))
#lang planet neil/sicp
(define (make-interval a b)
  (cons a b))
(define (upper-bound x) (cdr x))
(define (lower-bound x) (car x))
(define (mul-interval x y)
  (let ((p1 (* (lower-bound x) (lower-bound y)))
        (p2 (* (upper-bound x) (lower-bound y)))
        (p3 (* (lower-bound x) (upper-bound y)))
        (p4 (* (upper-bound x) (upper-bound y))))
  (make-interval (min p1 p2 p3 p4)
                 (max p1 p2 p3 p4))))
(define (div-interval x y)
  (if (or (< (upper-bound y) 0) (> (lower-bound y) 0))
      (mul-interval x (make-interval (/ 1.0 (upper-bound y))
                                     (/ 1.0 (lower-bound y))))
      (error "y can't include zero")))
(define inter1 (make-interval 1 3))
(define inter2 (make-interval -3 8))
(div-interval inter1 inter2)

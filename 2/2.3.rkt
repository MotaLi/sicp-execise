#lang planet neil/sicp
(define (make-point x y)
  (cons x y))
(define (x-point p) (car p))
(define (y-point p) (cdr p))
(define (make-react p1 p2 p3 p4)
  (cons (cons p1 p2) (cons p3 p4)))
(define (1-point r) (car (car r)))
(define (2-point r) (cdr (car r)))
(define (3-point r) (car (cdr r)))
(define (4-point r) (cdr (cdr r)))
(define (square x) (* x x))
(define (sum-of-square x y) (+ (square x) (square y)))
(define (len p1 p2)
  (sqrt (sum-of-square (abs (- (x-point p1) (x-point p2)))
                 (abs (- (y-point p1) (y-point p2))))))
(define (area r)
  (let ((l1 (len (1-point r) (2-point r)))
        (l2 (len (2-point r) (3-point r))))
    (* l1 l2)))

(define (perimeter r)
  (let ((l1 (len (1-point r) (2-point r)))
        (l2 (len (2-point r) (3-point r))))
    (* (+ l1 l2) 2)))
(define (move-point p dx dy)
  (make-point (+ (x-point p) dx) (+ (y-point p) dy)))
(define (point-width-height p w h)
  (make-react (move-point p 0 h)
              (move-point p w h)
              (move-point p w 0)
              p))

(define p1 (make-point 1 1))
(define p2 (make-point 1 3))
(define p3 (make-point 4 3))
(define p4 (make-point 4 1))
(define r (make-react p1 p2 p3 p4))
(perimeter r)
(area r)
(define r2 (point-width-height p1 -6 8))
(perimeter r2)
(area r2)


#lang planet neil/sicp

(define (make-interval a b)
  (cons a b))

(define (upper-bound x) (cdr x))
(define (lower-bound x) (car x))

(define (sub-interval x y)
  (make-interval (- (lower-bound x) (upper-bound y))
                 (- (upper-bound x) (lower-bound y))))
(define (add-interval x y)
  (make-interval (+ (lower-bound x) (lower-bound y))
                 (+ (upper-bound x) (upper-bound y))))
(define (mul-interval x y)
  (let ((p1 (* (lower-bound x) (lower-bound y)))
        (p2 (* (upper-bound x) (lower-bound y)))
        (p3 (* (lower-bound x) (upper-bound y)))
        (p4 (* (upper-bound x) (upper-bound y))))
  (make-interval (min p1 p2 p3 p4)
                 (max p1 p2 p3 p4))))
(define (div-interval x y)
  (mul-interval x (make-interval (/ 1.0 (upper-bound y))
                                 (/ 1.0 (lower-bound y)))))

(define (width-interval x) (/ (- (upper-bound x) (lower-bound x)) 2))

(define inter1 (make-interval 1 3))
(define inter2 (make-interval 2 8))
(width-interval inter1)
(width-interval inter2)
(display "add ")
(width-interval (add-interval inter1 inter2))
(display "sub ")
(width-interval (sub-interval inter1 inter2))
(display "mul ")
(width-interval (mul-interval inter1 inter2))
(display "div ")
(width-interval (div-interval inter1 inter2))